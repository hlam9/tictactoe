{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cat\\\\Desktop\\\\catting\\\\tictactoe\\\\src\\\\Board.js\";\nimport Square from './Square';\nimport calculateWinner from './calculateWinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  const gameOver = calculateWinner(squares);\n  const winner = gameOver === null || gameOver === void 0 ? void 0 : gameOver.winner;\n  const winningLine = gameOver === null || gameOver === void 0 ? void 0 : gameOver.line;\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else if (squares.includes(null)) {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  } else {\n    status = \"Game Over, tie\";\n  }\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n  let board = [];\n  let size = 3;\n  for (let row = 0; row < size; row++) {\n    let r = [];\n    for (let i = 0; i < size; i++) {\n      const index = i * size + row;\n      const highlight = winningLine === null || winningLine === void 0 ? void 0 : winningLine.includes(index);\n      r.push( /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[index],\n        onSquareClick: () => handleClick(index),\n        highlight: highlight\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this));\n    }\n    board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: r\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 20\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), board]\n  }, void 0, true);\n}\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Square","calculateWinner","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","xIsNext","squares","onPlay","gameOver","winner","winningLine","line","status","includes","handleClick","i","nextSquares","slice","board","size","row","r","index","highlight","push","value","onSquareClick","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["C:/Users/cat/Desktop/catting/tictactoe/src/Board.js"],"sourcesContent":["\r\nimport Square from './Square';\r\nimport calculateWinner from './calculateWinner';\r\nfunction Board({xIsNext, squares, onPlay}) {\r\n    \r\n    const gameOver = calculateWinner(squares);\r\n    const winner = gameOver?.winner;\r\n    const winningLine = gameOver?.line;\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else if(squares.includes(null)) {\r\n      status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n    } else {\r\n      status = \"Game Over, tie\";\r\n    }\r\n  \r\n    function handleClick(i) {\r\n      if (squares[i] || calculateWinner(squares)) {\r\n        return;\r\n      }\r\n      const nextSquares = squares.slice();\r\n      if (xIsNext) {\r\n        nextSquares[i] = \"X\";\r\n      } else {\r\n        nextSquares[i] = \"O\";\r\n      }\r\n      onPlay(nextSquares);\r\n    }\r\n      let board = [];\r\n      let size = 3;\r\n      for(let row=0;row<size;row++){\r\n        let r = [];\r\n        for(let i=0;i<size;i++){\r\n          const index = i * size + row;\r\n          const highlight = winningLine?.includes(index);\r\n          r.push(<Square key={index} value={squares[index]} onSquareClick={() => handleClick(index)} highlight={highlight}/>);\r\n        }\r\n        board.push(<div className=\"board-row\">\r\n          {r}\r\n          </div>);\r\n      }\r\n    \r\n    return (\r\n      <>\r\n      <div className=\"status\">\r\n        {status}\r\n      </div>\r\n        \r\n        {board}\r\n      </>\r\n    );\r\n  \r\n  }\r\nexport default Board;"],"mappings":";AACA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAChD,SAASC,KAAKA,CAAC;EAACC,OAAO;EAAEC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAEvC,MAAMC,QAAQ,GAAGT,eAAe,CAACO,OAAO,CAAC;EACzC,MAAMG,MAAM,GAAGD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,MAAM;EAC/B,MAAMC,WAAW,GAAGF,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,IAAI;EAClC,IAAIC,MAAM;EACV,IAAIH,MAAM,EAAE;IACVG,MAAM,GAAG,UAAU,GAAGH,MAAM;EAC9B,CAAC,MAAM,IAAGH,OAAO,CAACO,QAAQ,CAAC,IAAI,CAAC,EAAE;IAChCD,MAAM,GAAG,eAAe,IAAIP,OAAO,GAAG,GAAG,GAAG,GAAG,CAAC;EAClD,CAAC,MAAM;IACLO,MAAM,GAAG,gBAAgB;EAC3B;EAEA,SAASE,WAAWA,CAACC,CAAC,EAAE;IACtB,IAAIT,OAAO,CAACS,CAAC,CAAC,IAAIhB,eAAe,CAACO,OAAO,CAAC,EAAE;MAC1C;IACF;IACA,MAAMU,WAAW,GAAGV,OAAO,CAACW,KAAK,CAAC,CAAC;IACnC,IAAIZ,OAAO,EAAE;MACXW,WAAW,CAACD,CAAC,CAAC,GAAG,GAAG;IACtB,CAAC,MAAM;MACLC,WAAW,CAACD,CAAC,CAAC,GAAG,GAAG;IACtB;IACAR,MAAM,CAACS,WAAW,CAAC;EACrB;EACE,IAAIE,KAAK,GAAG,EAAE;EACd,IAAIC,IAAI,GAAG,CAAC;EACZ,KAAI,IAAIC,GAAG,GAAC,CAAC,EAACA,GAAG,GAACD,IAAI,EAACC,GAAG,EAAE,EAAC;IAC3B,IAAIC,CAAC,GAAG,EAAE;IACV,KAAI,IAAIN,CAAC,GAAC,CAAC,EAACA,CAAC,GAACI,IAAI,EAACJ,CAAC,EAAE,EAAC;MACrB,MAAMO,KAAK,GAAGP,CAAC,GAAGI,IAAI,GAAGC,GAAG;MAC5B,MAAMG,SAAS,GAAGb,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEG,QAAQ,CAACS,KAAK,CAAC;MAC9CD,CAAC,CAACG,IAAI,eAACvB,OAAA,CAACH,MAAM;QAAa2B,KAAK,EAAEnB,OAAO,CAACgB,KAAK,CAAE;QAACI,aAAa,EAAEA,CAAA,KAAMZ,WAAW,CAACQ,KAAK,CAAE;QAACC,SAAS,EAAEA;MAAU,GAA5FD,KAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwF,CAAC,CAAC;IACrH;IACAZ,KAAK,CAACM,IAAI,eAACvB,OAAA;MAAK8B,SAAS,EAAC,WAAW;MAAAC,QAAA,EAClCX;IAAC;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,CAAC;EACX;EAEF,oBACE7B,OAAA,CAAAE,SAAA;IAAA6B,QAAA,gBACA/B,OAAA;MAAK8B,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpBpB;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EAEHZ,KAAK;EAAA,eACN,CAAC;AAGP;AAACe,EAAA,GAlDM7B,KAAK;AAmDd,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}